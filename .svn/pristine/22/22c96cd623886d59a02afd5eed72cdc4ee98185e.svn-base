package com.jiahehongye.robred.adapter;

import android.content.Context;
import android.support.v4.app.FragmentActivity;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;

import com.bumptech.glide.Glide;
import com.jiahehongye.robred.MainActivity;
import com.jiahehongye.robred.R;
import com.jiahehongye.robred.bean.NewsBean;
import com.jiahehongye.robred.interfaces.MyHeadViewClickListener;
import com.jiahehongye.robred.interfaces.MyItemClickListener;
import com.jiahehongye.robred.utils.UIUtils;

import java.util.ArrayList;

/**
 * Created by huangjunhui on 2016/12/6.13:31
 */
public class FreshNewsRecycleAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolder> {
    private MainActivity mActivity;
    private ArrayList<NewsBean> fatherArrayList;
    private Context context;

    //item类型
    public static final int ITEM_TYPE_HEADER = 0;
    public static final int ITEM_TYPE_CONTENT = 1;
    public static final int ITEM_TYPE_FOOT = 2;
    public static final int ITEM_TYPE_CONTENT_ONE = 3;
    public static final int ITEM_TYPE_CONTENT_TWO = 4;
    private MyItemClickListener mItemClickListener;
    private MyHeadViewClickListener mHeadClickListener;
    private View footView;


    public FreshNewsRecycleAdapter(FragmentActivity activity, ArrayList<NewsBean> fatherArrayList) {
        this.mActivity = (MainActivity) activity;
        this.fatherArrayList = fatherArrayList;

    }

    @Override
    public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
        switch (viewType) {
            case ITEM_TYPE_HEADER:
                View headView = LayoutInflater.from(mActivity).inflate(R.layout.fragment_fresh_news_head, null);
                return new FreshNewsHeadViewHolder(headView, mHeadClickListener);
            case ITEM_TYPE_CONTENT:
                View contentView = LayoutInflater.from(mActivity).inflate(R.layout.fragment_fresh_news_content, null);
                return new FreshNewsContentViewHolder(contentView, mItemClickListener);
            case ITEM_TYPE_FOOT:
                footView = LayoutInflater.from(mActivity).inflate(R.layout.fragment_home_foot, null);
                return new FreshNewsFootViewHolder(footView);
            case ITEM_TYPE_CONTENT_ONE:
                View contentViewOne = LayoutInflater.from(mActivity).inflate(R.layout.fragment_fresh_news_content_type_one, null);
                return new FreshNewsContentViewHolder(contentViewOne, mItemClickListener);
            case ITEM_TYPE_CONTENT_TWO:
                View contentViewTwo = LayoutInflater.from(mActivity).inflate(R.layout.fragment_fresh_news_content_type_two, null);
                return new FreshNewsContentViewHolder(contentViewTwo, mItemClickListener);

        }
        return null;
    }



    @Override
    public int getItemViewType(int position) {
        if (getItemCount() == 1) {
            return ITEM_TYPE_HEADER;
        }
        if (position == 0) {
            return ITEM_TYPE_HEADER;
        } else if (position == fatherArrayList.size() + 1) {
            return ITEM_TYPE_FOOT;
        } else {
            if (fatherArrayList.get(position-1).getStyle().equals("1")) {
                return ITEM_TYPE_CONTENT_ONE;
            }else if (fatherArrayList.get(position-1).getStyle().equals("2")) {
                return ITEM_TYPE_CONTENT;
            }
        }
        return position;
    }

    @Override
    public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {

        switch (getItemViewType(position)){
            case ITEM_TYPE_CONTENT_ONE:
                onBindTitleViewHolder((FreshNewsContentViewHolder) holder,fatherArrayList.get(position-1));
                break;
            case ITEM_TYPE_CONTENT :
                onBindContentViewHolder((FreshNewsContentViewHolder) holder,fatherArrayList.get(position-1));

                break;

        }
    }


    private void onBindTitleViewHolder(FreshNewsContentViewHolder holder,NewsBean newsBean){
        holder.title.setText(newsBean.getTitle());
        Glide.with(UIUtils.getContext()).load(newsBean.getImgUrl()).asBitmap().into(holder.imageView);
        holder.des.setText(newsBean.getContentSource()+"   "+newsBean.getCreateDate()+"   评论"+newsBean.getCommentNum());
    }
    private void onBindContentViewHolder(FreshNewsContentViewHolder holder,NewsBean newsBean){
        holder.title.setText(newsBean.getTitle());
        Glide.with(UIUtils.getContext()).load(newsBean.getImgUrl()).asBitmap().into(holder.imageView);
        holder.des.setText(newsBean.getContentSource()+"   评论"+newsBean.getCommentNum()+"   "+newsBean.getCreateDate());
    }

    @Override
    public int getItemCount() {
        if (fatherArrayList != null && fatherArrayList.size() > 0) {
            return fatherArrayList.size() + 2;
        } else {
            return 1;
        }
    }

    public void setOnItemClickListener(MyItemClickListener listener) {
        this.mItemClickListener = listener;
    }

    public void setOnHeadClickListener(MyHeadViewClickListener listener) {
        this.mHeadClickListener = listener;
    }

    class FreshNewsHeadViewHolder extends RecyclerView.ViewHolder {


        public FreshNewsHeadViewHolder(View itemView, MyHeadViewClickListener mHeadClickListener) {
            super(itemView);
        }
    }

    class FreshNewsContentViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener {

        private MyItemClickListener mItemClickListener;
        private TextView title;
        private TextView des;
        private ImageView imageView;
        public FreshNewsContentViewHolder(View itemView, MyItemClickListener mItemClickListener) {
            super(itemView);
            this.mItemClickListener = mItemClickListener;
            itemView.setOnClickListener(this);
            title = (TextView) itemView.findViewById(R.id.freshnews_content_tv_title);
            imageView = (ImageView) itemView.findViewById(R.id.freshnews_content_one_iv_des);
            des = (TextView) itemView.findViewById(R.id.des);
        }

        @Override
        public void onClick(View v) {
            if(mItemClickListener!=null){
                mItemClickListener.onItemClick(v,getPosition()-1);
            }
        }
    }

    class FreshNewsFootViewHolder extends RecyclerView.ViewHolder {
        public FreshNewsFootViewHolder(View itemView) {
            super(itemView);
        }
    }
    public void showFootView() {
        if (footView != null) {
            footView.setVisibility(View.VISIBLE);
        }
    }

    public void hintFootView() {
        if (footView != null) {
            footView.setVisibility(View.GONE);
        }
    }
}
