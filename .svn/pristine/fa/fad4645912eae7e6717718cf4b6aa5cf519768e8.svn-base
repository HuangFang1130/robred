package com.jiahehongye.robred;

import android.content.Context;

import com.hyphenate.EMCallBack;
import com.hyphenate.EMConnectionListener;
import com.hyphenate.EMError;
import com.hyphenate.chat.EMClient;
import com.hyphenate.easeui.controller.EaseUI;
import com.hyphenate.easeui.domain.EaseUser;
import com.hyphenate.util.NetUtils;
import com.jiahehongye.robred.db.Model;
import com.jiahehongye.robred.utils.LocationUtils;
import com.jiahehongye.robred.utils.SPUtils;
import com.jiahehongye.robred.utils.UIUtils;

import java.util.Hashtable;
import java.util.Map;

/**
 * Created by huangjunhui on 2016/12/22.10:02
 */
public class AppHelper {

    private static AppHelper instance;
    private EaseUI easeUI;
    private Model model;
    private Map<String, EaseUser> contactList;

    public synchronized static AppHelper getInstance() {
        if (instance == null) {
            instance = new AppHelper();
        }
        return instance;
    }


    /**
     * 初始化操作
     *
     * @param context
     */
    public void init(Context context) {
        model = new Model(context);
        easeUI = EaseUI.getInstance();
        setEaseUIProviders();
        initLocation();//初始化位置信息
        initConnectionListener();

    }

    private void initConnectionListener() {
        //注册一个监听连接状态的listener
        EMClient.getInstance().addConnectionListener(new MyConnectionListener());

    }

    public void loginHuanXin() {
        String currentUser = (String) SPUtils.get(UIUtils.getContext(), Constant.LOGIN_MOBILE, "");
        if(currentUser!=null){
            EMClient.getInstance().login(currentUser,"admin123",new EMCallBack() {//回调
                @Override
                public void onSuccess() {
                    EMClient.getInstance().chatManager().loadAllConversations();
                }

                @Override
                public void onProgress(int progress, String status) {

                }

                @Override
                public void onError(int code, String message) {

                }
            });
        }

    }

    //实现ConnectionListener接口
    private class MyConnectionListener implements EMConnectionListener {
        @Override
        public void onConnected() {
        }

        @Override
        public void onDisconnected(final int error) {

            UIUtils.runInMainThread(new Runnable() {

                @Override
                public void run() {
                    if (error == EMError.USER_REMOVED) {
                        // 显示帐号已经被移除
                    } else if (error == EMError.USER_LOGIN_ANOTHER_DEVICE) {
                        // 显示帐号在其他设备登录
                    } else {
                        if (NetUtils.hasNetwork(UIUtils.getContext())){ //连接不到聊天服务器

                        }

                        else{

                        }
                        //当前网络不可用，请检查网络设置
                    }
                }
            });
        }

    }

    private void initLocation() {
        LocationUtils.getInstance().initLocation(UIUtils.getContext());

    }


    /**
     * 设置信息提供者
     */
    private void setEaseUIProviders() {
        easeUI.setUserProfileProvider(new EaseUI.EaseUserProfileProvider() {
            @Override
            public EaseUser getUser(String username) {
                return getUserInfo(username);
            }
        });

    }

    /**
     * 得到当前用户的信息
     *
     * @param username 环信id
     * @return EaseUser
     */
    private EaseUser getUserInfo(String username) {
        EaseUser user = null;
        user = getContactList().get(username);
        if (user == null) {
            user = new EaseUser(username);
        }
        return user;
    }

    /**
     * 得到所有联系人列表
     *
     * @return
     */
    public Map<String, EaseUser> getContactList() {
        contactList = model.getContactList();
        if (contactList == null) {
            return new Hashtable<>();
        }
        return contactList;
    }

    /**
     * 得到当前用户的环信id
     *
     * @return
     */
    public String getCurrentUsernName() {
        return (String) SPUtils.get(UIUtils.getContext(), Constant.LOGIN_MOBILE, "");
    }

    public void logoutHuanXin() {
        EMClient.getInstance().logout(true);
    }
}
