package com.jiahehongye.robred.adapter;

import android.content.Intent;
import android.os.Handler;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import com.bumptech.glide.Glide;
import com.jiahehongye.robred.Constant;
import com.jiahehongye.robred.R;
import com.jiahehongye.robred.activity.CommentAllActivity;
import com.jiahehongye.robred.activity.CommentSingleActivity;
import com.jiahehongye.robred.activity.FreshNewsDetailActivity;
import com.jiahehongye.robred.bean.CommentBean;
import com.jiahehongye.robred.bean.NewsBean;
import com.jiahehongye.robred.cook.CookieJarImpl;
import com.jiahehongye.robred.cook.PersistentCookieStore;
import com.jiahehongye.robred.interfaces.MyItemClickListener;
import com.jiahehongye.robred.utils.UIUtils;
import com.jiahehongye.robred.view.GlideCircleTransform;

import org.json.JSONException;
import org.json.JSONObject;

import java.io.IOException;
import java.util.ArrayList;

import okhttp3.Call;
import okhttp3.Callback;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.RequestBody;
import okhttp3.Response;

/**
 * Created by huangjunhui on 2016/12/6.16:44
 */
public class CommentAllRecycleAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolder> {

    //item类型
    public static final int ITEM_TYPE_CONTENT = 1;
    public static final int ITEM_TYPE_FOOT = 2;

    private CommentAllActivity mActivity;
    private ArrayList<CommentBean> fatherArrayList;
    private MyItemClickListener mItemClickListener;
    private View footView;
    private PersistentCookieStore persistentCookieStore;
    private Call call;

    public CommentAllRecycleAdapter(CommentAllActivity mActivity, ArrayList<CommentBean> fatherArrayList) {
        this.fatherArrayList = fatherArrayList;
        this.mActivity = mActivity;

    }

    @Override
    public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
        switch (viewType) {
            case ITEM_TYPE_CONTENT:
                View contentView = LayoutInflater.from(UIUtils.getContext()).inflate(R.layout.fragment_news_detail_content, null);
                return new CommentAllContentViewHolder(contentView, mItemClickListener);
            case ITEM_TYPE_FOOT:
                footView = LayoutInflater.from(UIUtils.getContext()).inflate(R.layout.fragment_home_foot, null);
                return new CommentAllFootViewHolder(footView);
        }
        return null;
    }

    @Override
    public int getItemViewType(int position) {
        if (position == getItemCount() - 1) {
            return ITEM_TYPE_FOOT;
        } else {
            return ITEM_TYPE_CONTENT;
        }
    }

    private void onBindTitleViewHolder(final CommentAllContentViewHolder holder, final CommentBean commentBean){
        holder.comment_tv_name.setText(commentBean.getNickName());
        holder.comment_tv_content.setText(commentBean.getContent());
        holder.comment_tv_zan_number.setText(commentBean.getPraiseNum());
        holder.comment_tv_answer.setText(commentBean.getCreateDate());
        holder.comment_tv_huifu.setText("回复-"+commentBean.getCommentNum());

        holder.comment_tv_huifu.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent = new Intent(UIUtils.getContext(), CommentSingleActivity.class);
                intent.putExtra("zixunid",CommentAllActivity.id);
                intent.putExtra("firstid",commentBean.getId());
                intent.putExtra("nickname",commentBean.getNickName());
                intent.putExtra("headimg",commentBean.getUserPhoto());
                intent.putExtra("content",commentBean.getContent());
                intent.putExtra("creatdate",commentBean.getCreateDate());
                intent.putExtra("personid",commentBean.getMemId());
                mActivity.startActivity(intent);
            }
        });

        holder.like.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                OkHttpClient.Builder builder = new OkHttpClient.Builder();
                persistentCookieStore = new PersistentCookieStore(mActivity);
                CookieJarImpl cookieJarImpl = new CookieJarImpl(persistentCookieStore);
                builder.cookieJar(cookieJarImpl);
                OkHttpClient client = builder.build();

                JSONObject jsonObject = new JSONObject();
                try {
                    jsonObject.put("commentId",commentBean.getId());
                } catch (JSONException e) {
                    e.printStackTrace();
                }

                RequestBody body = RequestBody.create(Constant.JSON, jsonObject.toString());
                Request request = new Request.Builder()
                        .url(Constant.NEWS_LIKE)
                        .post(body)
                        .build();


                call = client.newCall(request);
                call.enqueue(new Callback() {
                    @Override
                    public void onFailure(Call call, IOException e) {
                        mActivity.runOnUiThread(new Runnable() {
                            @Override
                            public void run() {
                                Toast.makeText(mActivity, "网络连接失败", Toast.LENGTH_SHORT).show();
                            }
                        });
                    }

                    @Override
                    public void onResponse(Call call, Response response) throws IOException {
                        String result = response.body().string();
                        try {
                            JSONObject object = new JSONObject(result);

                            final JSONObject data = new JSONObject(object.getString("data"));


                            mActivity.runOnUiThread(new Runnable() {
                                @Override
                                public void run() {
                                    try {
                                        if (data.getString("message").equals("已点赞")){
                                            holder.like.setSelected(true);
                                            holder.comment_tv_zan_number.setText(data.getString("praiseNum"));
                                        }else if (data.getString("message").equals("已取消")){
                                            holder.like.setSelected(false);
                                        }

                                    } catch (JSONException e) {
                                        e.printStackTrace();
                                    }
                                }
                            });

                        } catch (JSONException e) {
                            e.printStackTrace();
                        }
                    }
                });
            }
        });
        Glide.with(UIUtils.getContext()).load(commentBean.getUserPhoto()).transform(new GlideCircleTransform(UIUtils.getContext())).into(holder.comment_iv_avatar);
    }

    @Override
    public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
        switch (getItemViewType(position)){
            case ITEM_TYPE_CONTENT:
                onBindTitleViewHolder((CommentAllContentViewHolder) holder,fatherArrayList.get(position));
                break;
        }

    }

    public void setOnItemClickListener(MyItemClickListener listener) {
        this.mItemClickListener = listener;
    }
    @Override
    public int getItemCount() {
        if (fatherArrayList != null && fatherArrayList.size() > 0) {
            return fatherArrayList.size() + 1;
        } else {
            return 1;
        }
    }

    class CommentAllContentViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener {


        private MyItemClickListener mItemClickListener;
        private TextView comment_tv_name;
        private ImageView comment_iv_avatar;
        private TextView comment_tv_content;
        private TextView comment_tv_zan_number;
        private TextView comment_tv_answer,comment_tv_huifu;
        private ImageView like;

        public CommentAllContentViewHolder(View itemView, MyItemClickListener mItemClickListener) {
            super(itemView);
            this.mItemClickListener = mItemClickListener;
            itemView.setOnClickListener(this);
            comment_tv_name = (TextView) itemView.findViewById(R.id.comment_tv_name);
            comment_iv_avatar = (ImageView) itemView.findViewById(R.id.comment_iv_avatar);
            comment_tv_content = (TextView) itemView.findViewById(R.id.comment_tv_content);
            comment_tv_zan_number= (TextView) itemView.findViewById(R.id.comment_tv_zan_number);
            comment_tv_answer = (TextView) itemView.findViewById(R.id.comment_tv_answer);
            comment_tv_huifu = (TextView) itemView.findViewById(R.id.comment_tv_huifu);
            like = (ImageView) itemView.findViewById(R.id.like);
        }

        @Override
        public void onClick(View v) {
            if(mItemClickListener!=null){
                mItemClickListener.onItemClick(v,getPosition());
            }
        }
    }

    class CommentAllFootViewHolder extends RecyclerView.ViewHolder {


        public CommentAllFootViewHolder(View itemView) {
            super(itemView);
        }
    }

    public void showFootView() {
        if (footView != null) {
            footView.setVisibility(View.VISIBLE);
        }
    }

    public void hintFootView() {
        if (footView != null) {
            footView.setVisibility(View.GONE);
        }
    }

}
