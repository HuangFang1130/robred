package com.jiahehongye.robred;

import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.support.annotation.Nullable;
import android.widget.ImageView;

import com.bumptech.glide.Glide;
import com.bumptech.glide.load.engine.DiskCacheStrategy;
import com.jiahehongye.robred.activity.SplashActivity;
import com.jiahehongye.robred.cook.CookieJarImpl;
import com.jiahehongye.robred.cook.PersistentCookieStore;
import com.jiahehongye.robred.utils.UIUtils;

import org.json.JSONObject;

import java.io.IOException;

import okhttp3.Call;
import okhttp3.Callback;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.RequestBody;
import okhttp3.Response;

/**
 * Created by huangjunhui on 2017/1/19.18:11
 */
public class AdvertisementActivity extends BaseActivity {

    private static final int TIMER = 201;
    private ImageView mIvAvertisement;
    private int timer = 3;
    private Handler handler = new Handler() {
        @Override
        public void handleMessage(Message msg) {
            switch (msg.what) {
                case TIMER:
                    timer--;
                    if (timer > 0) {
                        Message message = handler.obtainMessage(TIMER);
                        handler.sendMessageDelayed(message, 1000);      // send message
                    }else {
                        Intent intent = new Intent(AdvertisementActivity.this, SplashActivity.class);
                        startActivity(intent);
                        finish();
                    }
                    break;

            }
        }
    };

    @Override
    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setTheme(R.style.AppTheme);
        setContentView(R.layout.activity_advertisement);
        mIvAvertisement = (ImageView) findViewById(R.id.avertisement_iv);
        Glide.with(UIUtils.getContext()).load(Constant.ADVERTISEMENT_IMG).diskCacheStrategy( DiskCacheStrategy.NONE )//禁用磁盘缓存
                .skipMemoryCache( true )//跳过内存缓存
                .into(mIvAvertisement);
        requestDate();
    }



    /**
     * 请求列表
     * 传参数：pageSize分页记录数、pageNumber页码
     */
    private void requestDate() {
        OkHttpClient.Builder builder = new OkHttpClient.Builder();
        PersistentCookieStore  persistentCookieStore = new PersistentCookieStore(this);
        CookieJarImpl cookieJarImpl = new CookieJarImpl(persistentCookieStore);
        builder.cookieJar(cookieJarImpl);
        OkHttpClient client = builder.build();

        JSONObject jsonObject = new JSONObject();

        RequestBody body = RequestBody.create(Constant.JSON, jsonObject.toString());
        Request request = new Request.Builder()
                .url(Constant.ADVERTISEMENT_URL)
                .post(body)
                .build();


        Call call = client.newCall(request);
        call.enqueue(new Callback() {
            @Override
            public void onFailure(Call call, IOException e) {
            }

            @Override
            public void onResponse(Call call, Response response) throws IOException {

            }
        });
    }
    @Override
    protected void onResume() {
        super.onResume();
        Message message = handler.obtainMessage(TIMER);     // Message
        handler.sendMessageDelayed(message, 1000);
    }
}
