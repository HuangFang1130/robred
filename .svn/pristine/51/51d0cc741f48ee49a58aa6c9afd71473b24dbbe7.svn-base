package com.jiahehongye.robred.activity;

import android.app.Activity;
import android.os.Handler;
import android.os.Message;
import android.os.Bundle;
import android.view.View;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import com.jiahehongye.robred.Constant;
import com.jiahehongye.robred.R;
import com.jiahehongye.robred.cook.CookieJarImpl;
import com.jiahehongye.robred.cook.PersistentCookieStore;

import org.json.JSONException;
import org.json.JSONObject;

import java.io.IOException;

import okhttp3.Call;
import okhttp3.Callback;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.RequestBody;
import okhttp3.Response;

public class PinglunActivity extends Activity {

    private PersistentCookieStore persistentCookieStore;
    private Call call;
    private TextView cancel_pinglun;
    private String type ;
    private String to_hf_id;
    private String shangyiji_id;
    private String shangyiji_person_id;
    private String zixunid;
    private EditText pinglunedit;
    private TextView fasong;
    private static final int UP_BACK = 0001;
    private Handler handler = new Handler() {
        @Override
        public void handleMessage(Message msg) {
            switch (msg.what) {
                case UP_BACK:
                    String a = (String) msg.obj;
                    try {
                        JSONObject object = new JSONObject(a);
                        if (object.getString("result").equals("success")) {
                            String data = object.getString("data");
                            if (data.equals("评论成功")){
                                pinglunedit.setText("");
                                finish();
                                Toast.makeText(PinglunActivity.this, "评论成功", Toast.LENGTH_SHORT).show();
                            }
                        }
                    } catch (JSONException e) {
                        e.printStackTrace();
                    }
                    break;
            }
        }
    };

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_pinglun);
        Bundle bundle = getIntent().getExtras();
        if (bundle != null){
            zixunid = bundle.getString("zixunid");
            type = bundle.getString("type");
            to_hf_id = bundle.getString("to_hf_id");
            shangyiji_id = bundle.getString("shangyiji_id");
            shangyiji_person_id = bundle.getString("shangyiji_person_id");
        }
        pinglunedit = (EditText) findViewById(R.id.pinglunedit);
        cancel_pinglun = (TextView) findViewById(R.id.cancel_pinglun);
        fasong = (TextView) findViewById(R.id.fasong);



        cancel_pinglun.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                finish();
            }
        });
        fasong.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                UpData();
            }
        });
    }



    private void UpData() {
        OkHttpClient.Builder builder = new OkHttpClient.Builder();
        persistentCookieStore = new PersistentCookieStore(getApplicationContext());
        CookieJarImpl cookieJarImpl = new CookieJarImpl(persistentCookieStore);
        builder.cookieJar(cookieJarImpl);
        OkHttpClient client = builder.build();

        JSONObject jsonObject = new JSONObject();
        if (type.equals("1")){
            try {
                jsonObject.put("informationId", zixunid);
                jsonObject.put("content", pinglunedit.getText().toString());
                jsonObject.put("commentLevel", "2");
                jsonObject.put("headCommentId",to_hf_id);
                jsonObject.put("upperCommentId",shangyiji_id);
                jsonObject.put("upperMemId",shangyiji_person_id);
            } catch (JSONException e) {
                e.printStackTrace();
            }

        }else if (type.equals("3")){
            try {
                jsonObject.put("informationId", zixunid);
                jsonObject.put("content", pinglunedit.getText().toString());
                jsonObject.put("commentLevel", "3");
                jsonObject.put("headCommentId",to_hf_id);
                jsonObject.put("upperCommentId",shangyiji_id);
                jsonObject.put("upperMemId",shangyiji_person_id);
            } catch (JSONException e) {
                e.printStackTrace();
            }
        }


        RequestBody body = RequestBody.create(Constant.JSON, jsonObject.toString());
        Request request = new Request.Builder()
                .url(Constant.UP_COMMENT)
                .post(body)
                .build();


        call = client.newCall(request);
        call.enqueue(new Callback() {
            @Override
            public void onFailure(Call call, IOException e) {
                PinglunActivity.this.runOnUiThread(new Runnable() {
                    @Override
                    public void run() {
                        Toast.makeText(PinglunActivity.this, "网络连接失败", Toast.LENGTH_SHORT).show();
                    }
                });
            }

            @Override
            public void onResponse(Call call, Response response) throws IOException {
                String result = response.body().string();

                Message msg = handler.obtainMessage();
                msg.what = UP_BACK;
                msg.obj = result;
                handler.sendMessage(msg);
            }
        });
    }
}
