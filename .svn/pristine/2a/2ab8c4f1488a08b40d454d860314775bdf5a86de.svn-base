package com.jiahehongye.robred.fragment;

import android.content.Intent;
import android.os.Bundle;
import android.os.Message;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.support.v4.widget.SwipeRefreshLayout;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Toast;

import com.jiahehongye.robred.Constant;
import com.jiahehongye.robred.R;
import com.jiahehongye.robred.activity.RedPersonalDetailActivity;
import com.jiahehongye.robred.adapter.GrabPersonalRecycleAdapter;
import com.jiahehongye.robred.cook.CookieJarImpl;
import com.jiahehongye.robred.cook.PersistentCookieStore;
import com.jiahehongye.robred.interfaces.MyItemClickListener;

import org.json.JSONException;
import org.json.JSONObject;

import java.io.IOException;
import java.util.ArrayList;

import okhttp3.Call;
import okhttp3.Callback;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.RequestBody;
import okhttp3.Response;

/**
 * Created by huangjunhui on 2016/12/2.13:57
 */
public class GrabPersonalFragment extends Fragment {

    private SwipeRefreshLayout mPersonalSwiperefresh;
    private RecyclerView mPersonalRecycleview;
    private LinearLayoutManager linearLayoutManager;
    private ArrayList<String> arrayList;
    private ArrayList<String> fatherArrayList;
    private GrabPersonalRecycleAdapter mGrabPersonalRecycleAdapter;

    @Nullable
    @Override
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        View view = LayoutInflater.from(getActivity()).inflate(R.layout.fragment_grabred_personal,null);
        mPersonalSwiperefresh = (SwipeRefreshLayout) view.findViewById(R.id.grabred_personal_swiperefresh);
        mPersonalRecycleview = (RecyclerView) view.findViewById(R.id.grabred_personal_recycleview);

        return view;

    }

    @Override
    public void onActivityCreated(@Nullable Bundle savedInstanceState) {
        super.onActivityCreated(savedInstanceState);
        mPersonalSwiperefresh.setColorSchemeResources(R.color.holo_blue_bright,R.color.holo_green_light,
                R.color.holo_orange_light, R.color.holo_red_light);
        mPersonalSwiperefresh.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {
            @Override
            public void onRefresh() {
                mPersonalSwiperefresh.setRefreshing(false);
            }
        });

        linearLayoutManager = new LinearLayoutManager(getActivity());
        mPersonalRecycleview.setLayoutManager(linearLayoutManager);
        arrayList = new ArrayList<>();
        for (int i = 0; i < 30; i++) {
            arrayList.add("我是第" + i + "个条目");
        }
        fatherArrayList = new ArrayList<>();
        fatherArrayList.addAll(arrayList);

        mGrabPersonalRecycleAdapter = new GrabPersonalRecycleAdapter(getActivity(), fatherArrayList);
        mPersonalRecycleview.setAdapter(mGrabPersonalRecycleAdapter);

        //滑动的监听
        mPersonalRecycleview.addOnScrollListener(new RecyclerView.OnScrollListener() {
            @Override
            public void onScrollStateChanged(RecyclerView recyclerView, int newState) {
                super.onScrollStateChanged(recyclerView, newState);
                if(newState == RecyclerView.SCROLL_STATE_IDLE){
                    int lastVisiblePosition = linearLayoutManager.findLastVisibleItemPosition();
                    if(lastVisiblePosition >= linearLayoutManager.getItemCount()-1){
                        fatherArrayList.addAll(arrayList);
                        mGrabPersonalRecycleAdapter.notifyDataSetChanged();
                    }

                }
            }
        });

        mGrabPersonalRecycleAdapter.setOnItemClickListener(new MyItemClickListener() {
            @Override
            public void onItemClick(View view, int postion) {
                Intent intent = new Intent(getActivity(),RedPersonalDetailActivity.class);
                startActivity(intent);
            }
        });

        getRedBag();

    }

    /**
     * 获取个人红包列表
     */
    private PersistentCookieStore persistentCookieStore;
    private Call call;
    private void getRedBag() {
        OkHttpClient.Builder builder = new OkHttpClient.Builder();
        persistentCookieStore = new PersistentCookieStore(getActivity());
        CookieJarImpl cookieJarImpl = new CookieJarImpl(persistentCookieStore);
        builder.cookieJar(cookieJarImpl);
        OkHttpClient client = builder.build();

        JSONObject jsonObject = new JSONObject();
        try {
            jsonObject.put("pageSize", "10");
            jsonObject.put("pageNumber", "1");
            jsonObject.put("type", "1");
        } catch (JSONException e) {
            e.printStackTrace();
        }

        RequestBody body = RequestBody.create(Constant.JSON, jsonObject.toString());
        Request request = new Request.Builder()
                .url(Constant.GET_PERSON_REDBAGLIST)
                .post(body)
                .build();

        call = client.newCall(request);
        call.enqueue(new Callback() {
            @Override
            public void onFailure(Call call, IOException e) {
                getActivity().runOnUiThread(new Runnable() {
                    @Override
                    public void run() {
                        Toast.makeText(getActivity(), "网络请求失败", Toast.LENGTH_SHORT).show();
                    }
                });
            }

            @Override
            public void onResponse(Call call, Response response) throws IOException {
                String result = response.body().string();
                Log.e("个人红包列表返回：", result);

            }
        });
    }
}
