package com.jiahehongye.robred.activity;

import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.drawable.BitmapDrawable;
import android.os.Bundle;
import android.support.v4.view.PagerAdapter;
import android.support.v4.view.ViewPager;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;

import com.jiahehongye.robred.BaseActivity;
import com.jiahehongye.robred.R;

import java.io.InputStream;
import java.util.ArrayList;
import java.util.List;

public class SettingWelcome extends BaseActivity {
	private ViewPager vp_guide_bg;
	private List<ImageView> imgs;

	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setContentView(R.layout.set_welcome);
//		base_title.setText("欢迎导航");
		initData();
		init();
		
	}

	private void init() {

		vp_guide_bg = (ViewPager) findViewById(R.id.vp_guide_bg);
		vp_guide_bg.setAdapter(new Myadapter());

	}

	private void initData() {
		int[] imgIds = new int[] { R.drawable.guide1, R.drawable.guide2, R.drawable.guide3 };

		imgs = new ArrayList<ImageView>();
		for (int i = 0; i < imgIds.length; i++) {
			ImageView imageView = new ImageView(SettingWelcome.this);
			
			//防止内存溢出方案。
			BitmapFactory.Options opt = new BitmapFactory.Options();

			opt.inPreferredConfig = Bitmap.Config.RGB_565;

			opt.inPurgeable = true;

			opt.inInputShareable = true;

			InputStream is = getResources().openRawResource(imgIds[i]);

			Bitmap bm = BitmapFactory.decodeStream(is, null, opt);

			BitmapDrawable bd = new BitmapDrawable(getResources(), bm);

			imageView.setBackgroundDrawable(bd);
			
//			imageView.setBackgroundResource(imgIds[i]);
			imgs.add(imageView);

		}
	}

	class Myadapter extends PagerAdapter {

		@Override
		public int getCount() {
			return imgs.size();
		}

		@Override
		public boolean isViewFromObject(View arg0, Object arg1) {
			return arg0 == arg1;
		}

		@Override
		public void destroyItem(ViewGroup container, int position, Object object) {
			container.removeView((View) object);
		}

		@Override
		public Object instantiateItem(ViewGroup container, int position) {
			ImageView imageView = imgs.get(position);
			container.addView(imageView);
			return imageView;
		}

	}

}
