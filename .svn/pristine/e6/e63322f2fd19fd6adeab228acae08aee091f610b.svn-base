package com.jiahehongye.robred.activity;

import android.content.DialogInterface;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.support.annotation.Nullable;
import android.text.TextUtils;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import com.google.gson.Gson;
import com.hyphenate.EMCallBack;
import com.hyphenate.chat.EMClient;
import com.jiahehongye.robred.BaseActivity;
import com.jiahehongye.robred.Constant;
import com.jiahehongye.robred.MainActivity;
import com.jiahehongye.robred.R;
import com.jiahehongye.robred.bean.LoginResult;
import com.jiahehongye.robred.cook.CookieJarImpl;
import com.jiahehongye.robred.cook.PersistentCookieStore;
import com.jiahehongye.robred.utils.DesUtil;
import com.jiahehongye.robred.utils.LogUtil;
import com.jiahehongye.robred.utils.SPUtils;
import com.jiahehongye.robred.utils.ThreadManager;
import com.jiahehongye.robred.utils.UIUtils;
import com.jiahehongye.robred.view.MyProgressDialog;

import org.json.JSONException;
import org.json.JSONObject;

import java.io.IOException;

import okhttp3.Call;
import okhttp3.Callback;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.RequestBody;
import okhttp3.Response;

/**
 * Created by huangjunhui on 2016/12/9.9:50
 */
public class LoginActivity extends BaseActivity implements View.OnClickListener {

    private static final String TAG = "LoginActivity";
    private Button mBtnRegister;//注册按钮
    private Button mBtnLogin;  //登录按钮
    private EditText mEtPhone;//用户名
    private EditText mEtPassword;//用户密码

    private static final int LOGIN_OK = 0000;

    private Handler handler = new Handler() {
        @Override
        public void handleMessage(Message msg) {
            switch (msg.what) {
                case LOGIN_OK:
                    String login = (String) msg.obj;
                    LoginResult loginResult = new Gson().fromJson(login, LoginResult.class);
                    if (loginResult.getResult().equals(Constant.SUCCESS)) {
                        saveInfor(loginResult);
                        loginChat();
                        finish();
                        startActivity(new Intent(LoginActivity.this, MainActivity.class));
                    } else {
                        Toast.makeText(UIUtils.getContext(), "登录失败！", Toast.LENGTH_SHORT).show();
                    }

                    break;

            }
        }
    };

    private String userName;
    private String password;
    private String encryptPassword;

    @Override
    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        applyKitKatTranslucency();
        setContentView(R.layout.activity_login);
        initView();

    }

    private void initView() {
        mBtnLogin = (Button) findViewById(R.id.login_bt_login);
        mBtnRegister = (Button) findViewById(R.id.login_bt_register);
        mEtPhone = (EditText) findViewById(R.id.login_et_phone);
        mEtPassword = (EditText) findViewById(R.id.login_et_password);
        ImageView mIvClose = (ImageView) findViewById(R.id.login_iv_close);
        TextView mTvForgetPassword = (TextView) findViewById(R.id.login_tv_forget_password);

        mBtnLogin.setOnClickListener(this);
        mBtnRegister.setOnClickListener(this);
        mTvForgetPassword.setOnClickListener(this);
        mIvClose.setOnClickListener(this);
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()) {
            case R.id.login_bt_login://登录
                login();
                break;

            case R.id.login_bt_register://注册
                Intent registerIntent = new Intent(this, RegisterActivity.class);
                startActivity(registerIntent);
                break;

            case R.id.login_tv_forget_password://忘记密码
                Intent forgetIntent = new Intent(this, ForgetPasswordActivity.class);
                startActivity(forgetIntent);
                break;

            case R.id.login_iv_close:
                finish();
                break;

        }
    }

    /**
     * 登录操作
     */
    private PersistentCookieStore persistentCookieStore;
    private MyProgressDialog animDialog;
    private Call call;

    private void login() {
        userName = mEtPhone.getText().toString().trim();
        password = mEtPassword.getText().toString().trim();

        if (TextUtils.isEmpty(userName)) {
            Toast.makeText(this, "请输入用户名！", Toast.LENGTH_SHORT).show();
            return;
        }
        if (TextUtils.isEmpty(password)) {
            Toast.makeText(this, "请输入密码！", Toast.LENGTH_SHORT).show();
            return;
        }

        showMyDialog();
        encryptPassword = DesUtil.encrypt(password);
        LogUtil.LogShitou(encryptPassword);

        OkHttpClient.Builder builder = new OkHttpClient.Builder();
        persistentCookieStore = new PersistentCookieStore(getApplicationContext());
        CookieJarImpl cookieJarImpl = new CookieJarImpl(persistentCookieStore);
        builder.cookieJar(cookieJarImpl);
        OkHttpClient client = builder.build();

        JSONObject jsonObject = new JSONObject();
        try {
            jsonObject.put("mobile", userName);
            jsonObject.put("password", encryptPassword);
        } catch (JSONException e) {
            e.printStackTrace();
        }

        RequestBody body = RequestBody.create(Constant.JSON, jsonObject.toString());
        Request request = new Request.Builder()
                .url(Constant.LOGIN_URL)
                .post(body)
                .build();

        Log.e("登陆请求：", "mobile=" + userName + ",password=" + encryptPassword);


        call = client.newCall(request);
        call.enqueue(new Callback() {
            @Override
            public void onFailure(Call call, IOException e) {
                LoginActivity.this.runOnUiThread(new Runnable() {
                    @Override
                    public void run() {
                        Toast.makeText(LoginActivity.this, "网络连接失败", Toast.LENGTH_SHORT).show();
                        animDialog.dismiss();
                    }
                });
            }

            @Override
            public void onResponse(Call call, Response response) throws IOException {
                String result = response.body().string();
                Log.e("登陆返回：", result);

                Message msg = handler.obtainMessage();
                msg.what = LOGIN_OK;
                msg.obj = result;
                handler.sendMessage(msg);
            }
        });

    }

    /**
     * 显示对话框
     */
    public void showMyDialog() {
        animDialog = new MyProgressDialog(this, "玩命加载中...", R.drawable.loading);
        animDialog.show();
        animDialog.setCancelable(true);
        animDialog.setOnDismissListener(new DialogInterface.OnDismissListener() {
            @Override
            public void onDismiss(DialogInterface dialogInterface) {
                if (call.isExecuted()) {
                    call.cancel();
                }
            }
        });
    }

    //登录环信
    private void loginChat() {
        ThreadManager.getLongPool().execute(new Runnable() {
            @Override
            public void run() {
                if (EMClient.getInstance().isLoggedInBefore() && EMClient.getInstance().getCurrentUser().equals(userName)) {
                    EMClient.getInstance().groupManager().loadAllGroups();
                    EMClient.getInstance().chatManager().loadAllConversations();
                    Log.d("main", "isLoggedInBefore登录聊天服务器成功！");
                    Intent intent = new Intent(LoginActivity.this, MainActivity.class);
                    animDialog.dismiss();
                    startActivity(intent);
                    finish();
                    return;
                }

                EMClient.getInstance().login(userName, password, new EMCallBack() {
                    @Override
                    public void onSuccess() {
                        EMClient.getInstance().groupManager().loadAllGroups();
                        EMClient.getInstance().chatManager().loadAllConversations();
                        Log.d("main", "登录聊天服务器成功！");
                        animDialog.dismiss();
                    }

                    @Override
                    public void onProgress(int progress, String status) {

                    }

                    @Override
                    public void onError(final int code, final String message) {
                        Log.d("main", "登录聊天服务器失败！");
                        animDialog.dismiss();
                    }
                });
            }
        });
    }

    /**
     * 保存用户信息
     *
     * @param loginResult
     */
    private void saveInfor(LoginResult loginResult) {
        String id = loginResult.getData().getId(); //唯一标示
        String memberRank = loginResult.getData().getMemberRank();//会员等级
        String memberType = loginResult.getData().getMemberType();//会员类型
        String mobile = loginResult.getData().getMobile();//会员手机
        String redIntegral = loginResult.getData().getRedIntegral();//积分

        SPUtils.put(UIUtils.getContext(), Constant.LOGIN_ID, id);
        SPUtils.put(UIUtils.getContext(), Constant.LOGIN_MEMBERRANK, memberRank);
        SPUtils.put(UIUtils.getContext(), Constant.LOGIN_MEMBERTYPE, memberType);
        SPUtils.put(UIUtils.getContext(), Constant.LOGIN_MOBILE, mobile);
        SPUtils.put(UIUtils.getContext(), Constant.LOGIN_REDINTEGRAL, redIntegral);

        SPUtils.put(UIUtils.getContext(), Constant.LOGIN_PASSWORD, password);
    }

}