package com.jiahehongye.robred.activity;

import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.support.annotation.Nullable;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import com.google.gson.Gson;
import com.jiahehongye.robred.BaseActivity;
import com.jiahehongye.robred.Constant;
import com.jiahehongye.robred.MainActivity;
import com.jiahehongye.robred.R;
import com.jiahehongye.robred.bean.ThridOpenIdResult;
import com.jiahehongye.robred.cook.CookieJarImpl;
import com.jiahehongye.robred.cook.PersistentCookieStore;
import com.jiahehongye.robred.utils.LogUtil;
import com.jiahehongye.robred.utils.SPUtils;
import com.jiahehongye.robred.utils.UIUtils;

import org.json.JSONObject;

import java.io.IOException;

import okhttp3.Call;
import okhttp3.Callback;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.RequestBody;
import okhttp3.Response;

/**
 * Created by huangjunhui on 2016/12/9.11:19
 */
public class RegisterReceiverVerificyActivity extends BaseActivity implements View.OnClickListener {

    private static final int REGISTER_SUCCESS = 200;
    private EditText mEtVerificyCode;
    private EditText mEtVerificyPassword;
    private TextView mTvTimer;
    private TextView mTvPhone;
    private String phone;
    private String mediaType;
    private String openId;



    private Handler handler = new Handler() {
        @Override
        public void handleMessage(Message msg) {
            switch (msg.what) {
                case REGISTER_SUCCESS:
                    String result = (String) msg.obj;
                    System.out.println("第三方注册返回信息"+result);
                    // 这里返回success的话就是登录成功。进入系统。使用注册的手机号进入系统。调用登录接口？

                    Gson gson = new Gson();
                    ThridOpenIdResult thridOpenIdBean = gson.fromJson(result, ThridOpenIdResult.class);

                    if (thridOpenIdBean.getResult().equals("success")) {
                        Intent intent = new Intent(RegisterReceiverVerificyActivity.this, LoginActivity.class);
                        SPUtils.put(UIUtils.getContext(),Constant.LOGIN_MOBILE,phone);
                        SPUtils.put(UIUtils.getContext(),Constant.LOGIN_PASSWORD,password);
                        startActivity(intent);
//
// login(tel1, pwd1);
//
//                        ThridRegster.this.finish();
//                        // 登录成功,保存seesionid并且退出当前页面返回上一个界面。
//                        startActivity(new Intent(ThridRegster.this, MainActivity.class));
                    } else if (thridOpenIdBean.getResult().equals("fail")) {
                        Toast.makeText(RegisterReceiverVerificyActivity.this, thridOpenIdBean.getErrorMsg(), 0).show();
                    } else {
                        Toast.makeText(RegisterReceiverVerificyActivity.this, "请输入正确", 0).show();
                    }

                    break;

            }
        }
    };
    private String password;

    @Override
    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        applyKitKatTranslucency();
        setContentView(R.layout.activity_register_receiver_verificy);
        Intent intent = getIntent();
        phone = intent.getStringExtra("phone");
        mediaType = intent.getStringExtra("mediaType");
        openId = intent.getStringExtra("openId");

        initView();
    }

    private void initView() {
        ImageView mIvBack = (ImageView) findViewById(R.id.register_verificy_iv_colse);
        mEtVerificyCode = (EditText) findViewById(R.id.register_verificy_et_code);
        mEtVerificyPassword = (EditText) findViewById(R.id.register_verificy_et_password);
        mTvTimer = (TextView) findViewById(R.id.register_verificy_tv_timer);//倒计时
        Button mBtnRegister = (Button) findViewById(R.id.register_verificy_btn_register);
        mTvPhone = (TextView) findViewById(R.id.register_verificy_tv_phone);



        mTvPhone.setText("+86  "+phone);
        mIvBack.setOnClickListener(this);
        mBtnRegister.setOnClickListener(this);
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()){
            case R.id.register_verificy_iv_colse :
                finish();
                break;
            case R.id.register_verificy_btn_register://注册
                register();
                break;
        }
    }

    /**
     * 注册的方法
     */
    private void register() {
//        tel1 = thrid_registertel.getText().toString().trim();

        password = mEtVerificyPassword.getText().toString().trim();

       String code = mEtVerificyCode.getText().toString().trim();

//        if (!(IsPhone.isPhone(tel1)) && tel1.length() < 11) {
//            Toast.makeText(ThridRegster.this, "输入的手机号码不正确", Toast.LENGTH_SHORT).show();
//        } else {
//            if (IsPassword.isPassword(pwd)) {
//                if (!(TextUtils.isEmpty(code))) {
//                    // 获取到密码后加密
//                    pwd1 = DesUtil.encrypt(pwd);
//
//                    requstHttp(tel1, pwd1, code);
//
//                    // Toast.makeText(getActivity(), "注册成功",
//                    // Toast.LENGTH_SHORT).show();
//                } else {
//                    Toast.makeText(ThridRegster.this, "请输入验证码", Toast.LENGTH_SHORT).show();
//                }
//            } else {
//                Toast.makeText(ThridRegster.this, "请输入6-18位的英文数字组合", Toast.LENGTH_SHORT).show();
//            }
//        }
        registerToServer(phone, password, code);

    }

    /**
     * 第三方登录的时候的注册方法
     * @param tel1
     * @param pwd1
     * @param code
     */
    private void registerToServer(final String tel1, final String pwd1, String code) {

        OkHttpClient.Builder builder = new OkHttpClient.Builder();
        PersistentCookieStore  persistentCookieStore = new PersistentCookieStore(getApplicationContext());
        CookieJarImpl cookieJarImpl = new CookieJarImpl(persistentCookieStore);
        builder.cookieJar(cookieJarImpl);
        OkHttpClient client = builder.build();

        JSONObject json = new JSONObject();
        try {
            json.put("mobile", tel1);
            json.put("password", pwd1);
            json.put("checkCode", code);
            json.put("memberType", 0);
            json.put("mediaType", mediaType);
            json.put("openId", openId);
        } catch (Exception e) {
            e.printStackTrace();
        }

        RequestBody body = RequestBody.create(Constant.JSON, json.toString());
        Request request = new Request.Builder()
                .url(Constant.BIND_OPENID_TOSERVER)
                .post(body)
                .build();



        Call call = client.newCall(request);
        call.enqueue(new Callback() {
            @Override
            public void onFailure(Call call, IOException e) {
                RegisterReceiverVerificyActivity.this.runOnUiThread(new Runnable() {
                    @Override
                    public void run() {
                        Toast.makeText(RegisterReceiverVerificyActivity.this, "网络连接失败", Toast.LENGTH_SHORT).show();
                    }
                });
            }

            @Override
            public void onResponse(Call call, Response response) throws IOException {
                String result = response.body().string();
                LogUtil.LogShitou(result.toString());
//
                Message msg = handler.obtainMessage();
                msg.what = REGISTER_SUCCESS;
                msg.obj = result;
                handler.sendMessage(msg);
            }
        });


//        String type = "0";
//        Intent intent = getIntent();
//        String openId = intent.getStringExtra("openId");
//        String mediaType = intent.getStringExtra("mediaType");
        // 还差6个登录返回的数据。
//        if (male.isChecked()) {
//            type = "0";
//        } else if (female.isChecked()) {
//            type = "1";
//        }



//        // 网络请求
//        final HttpUtils httputils = new HttpUtils();
//        httputils.configCookieStore(MyCookieStore.cookieStore);
//
//        RequestParams params = new RequestParams();
//        // 设置请求数据格式
//        params.addHeader("Content-Type", "application/json;charset=utf-8");
//
//        JSONObject json = new JSONObject();
//        try {
//            json.put("mobile", tel1);
//            json.put("password", pwd1);
//            json.put("checkCode", code);
//            json.put("memberType", type);
//            json.put("mediaType", mediaType);
//            json.put("openId", openId);
//            SharedPreferencesUtils.putString(MainActivity.getContext(), "memberType", type);
//            // 把json对象添加到正文对象里面。
//            StringEntity stringEntity = new StringEntity(json.toString());
//            // 设置params的正文对象为json实体。
//            params.setBodyEntity(stringEntity);
//
//        } catch (Exception e) {
//
//            e.printStackTrace();
//        }
//
//        httputils.send(HttpRequest.HttpMethod.POST, UrlUtils.BINDACCOUNTREGISTER, params, new RequestCallBack<String>() {
//
//            @Override
//            public void onFailure(HttpException arg0, String arg1) {
//                dialog.dismiss();
//            }
//
//            @Override
//            public void onSuccess(ResponseInfo<String> arg0) {
//                // 这是请求成功后返回数据进行设置。
//                dialog.dismiss();
//                String result = arg0.result;
//                System.out.println("第三方注册返回信息"+result);
//                // 这里返回success的话就是登录成功。进入系统。使用注册的手机号进入系统。调用登录接口？
//
//                Gson gson = new Gson();
//                ThridOpenIdBean thridOpenIdBean = gson.fromJson(result, ThridOpenIdBean.class);
//
//                if (thridOpenIdBean.getResult().equals("success")) {
//
//                    login(tel1, pwd1);
//
//                    ThridRegster.this.finish();
//                    // 登录成功,保存seesionid并且退出当前页面返回上一个界面。
//                    startActivity(new Intent(ThridRegster.this, MainActivity.class));
//                } else if (thridOpenIdBean.getResult().equals("fail")) {
//                    Toast.makeText(ThridRegster.this, thridOpenIdBean.getErrorMsg(), 0).show();
//                } else {
//                    Toast.makeText(ThridRegster.this, "请输入正确", 0).show();
//                }
//            }
//        });

    }
}
