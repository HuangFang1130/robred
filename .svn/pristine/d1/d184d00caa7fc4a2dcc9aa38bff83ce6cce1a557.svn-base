package com.jiahehongye.robred.adapter;

import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

import com.jiahehongye.robred.R;
import com.jiahehongye.robred.activity.NotifyActivity;
import com.jiahehongye.robred.bean.MessageDetailResult;
import com.jiahehongye.robred.interfaces.MyItemClickListener;

import java.util.List;

/**
 * Created by huangjunhui on 2017/1/5.16:44
 */
public class NotifyListRecycleAdapter extends RecyclerView.Adapter {
    private List<MessageDetailResult.FindMessageBean> fatherArrayList;
    private NotifyActivity activity;

    private MyItemClickListener mItemClickListener;
    //item类型
    public static final int ITEM_TYPE_HEADER = 0;
    public static final int ITEM_TYPE_CONTENT = 1;
    public static final int ITEM_TYPE_FOOT = 2;
    private View footView;

    public NotifyListRecycleAdapter(NotifyActivity notifyActivity, List<MessageDetailResult.FindMessageBean> fatherListDate) {
        this.activity = notifyActivity;
        this.fatherArrayList = fatherListDate;

    }

    @Override
    public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
        switch (viewType) {

            case ITEM_TYPE_CONTENT:
                View contentView = LayoutInflater.from(activity).inflate(R.layout.activity_norify_content, null);
                return new NotifyListContentViewHolder(contentView, mItemClickListener);
            case ITEM_TYPE_FOOT:
                footView = LayoutInflater.from(activity).inflate(R.layout.fragment_home_foot, null);
                return new NotifyListFootViewHolder(footView);
        }
        return null;
    }

    public void showFootView() {
        if (footView != null) {
            footView.setVisibility(View.VISIBLE);
        }
    }

    public void hintFootView() {
        if (footView != null) {
            footView.setVisibility(View.GONE);
        }
    }
    @Override
    public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {

    }

    @Override
    public int getItemViewType(int position) {

        if(fatherArrayList!=null && fatherArrayList.size() > 0){
            if (position == fatherArrayList.size()) {
                return ITEM_TYPE_FOOT;
            } else {
                return ITEM_TYPE_CONTENT;
            }
        }
        return ITEM_TYPE_CONTENT;

    }

    @Override
    public int getItemCount() {
        if (fatherArrayList != null && fatherArrayList.size() > 0) {
            return fatherArrayList.size() + 1;
        } else {
            return 1;
        }
    }
    public void setOnItemClickListener(MyItemClickListener listener) {
        this.mItemClickListener = listener;
    }
    private class NotifyListContentViewHolder extends RecyclerView.ViewHolder {

        public NotifyListContentViewHolder(View contentView, MyItemClickListener mItemClickListener) {
            super(contentView);

        }
    }

    private class NotifyListFootViewHolder extends RecyclerView.ViewHolder {
        public NotifyListFootViewHolder(View footView) {
            super(footView);
        }
    }
}
