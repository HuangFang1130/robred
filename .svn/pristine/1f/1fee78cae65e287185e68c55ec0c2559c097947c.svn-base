package com.jiahehongye.robred.adapter;

import android.graphics.Bitmap;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.webkit.WebViewClient;
import android.widget.ImageView;
import android.widget.TextView;

import com.bumptech.glide.Glide;
import com.jiahehongye.robred.R;
import com.jiahehongye.robred.activity.DFTTNewsDetailActivity;
import com.jiahehongye.robred.bean.DFTTNewsResult;
import com.jiahehongye.robred.interfaces.MyHeadViewClickListener;
import com.jiahehongye.robred.interfaces.MyItemClickListener;
import com.jiahehongye.robred.jiecao.JCVideoPlayer;
import com.jiahehongye.robred.jiecao.JCVideoPlayerStandard;
import com.jiahehongye.robred.utils.UIUtils;
import com.squareup.picasso.Picasso;

import java.util.ArrayList;

/**
 * Created by huangjunhui on 2017/5/23.8:28
 */
public class DFTTDetailRecycleAdapter extends BaseRecycleViewAdapter {
    private String title;
    private String img;
    private String videolink;
    private String resource;
    private String isVideo;
    private String url;
    private DFTTNewsDetailActivity mMainUi;
    private ArrayList<DFTTNewsResult.DataBean> fatherArraylist;

    public DFTTDetailRecycleAdapter(DFTTNewsDetailActivity dfttNewsDetailActivity, ArrayList fatherListDate, String url, String isVideo, String videolink, String resource
            , String title, String img
    ) {
        this.mMainUi = dfttNewsDetailActivity;
        this.fatherArraylist = fatherListDate;
        this.url = url;
        this.isVideo = isVideo;
        this.videolink = videolink;
        this.resource = resource;
        this.title = title;
        this.img = img;
    }

    @Override
    public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
        switch (viewType) {
            case ITEM_TYPE_HEADER:
//                View headView = LayoutInflater.from(mMainUi).inflate(R.layout.activity_detail_dftt, null);
//                return new HomeHeadViewHolder(headView, mHeadClickListener);

                ViewGroup.LayoutParams lp = new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);
                WebView headView = new WebView(parent.getContext());
                headView.setLayoutParams(lp);
                return new HomeHeadViewHolder(headView, mHeadClickListener);


            case ITEM_TYPE_CONTENT://1图片de
                View contentViewOne = LayoutInflater.from(mMainUi).inflate(R.layout.fragment_fresh_news_content_type_one, null);
                return new HomeSingleContentViewHolder(contentViewOne, mItemClickListener);

            case ITEM_TYPE_BIG_ADV://大图广告
                View avdTwo3 = LayoutInflater.from(mMainUi).inflate(R.layout.fragment_fresh_news_content, null);
                return new FreshBigADVViewHolder(avdTwo3, mItemClickListener);

            case ITEM_TYPE_ADV://三张小图的广告
                View avdTwo = LayoutInflater.from(mMainUi).inflate(R.layout.fragment_fresh_news_content_type_two, null);
                return new FreshNewsADVViewHolder(avdTwo, mItemClickListener);

            case ITEM_TYPE_EMPTY:
                View contentViewTwo = LayoutInflater.from(mMainUi).inflate(R.layout.fragment_vedio_content_type_two, null);
                return new HomeSingleContentTwoViewHolder(contentViewTwo, mItemClickListener);


        }


        return null;
    }

    private class HomeSingleContentTwoViewHolder extends RecyclerView.ViewHolder {

        JCVideoPlayerStandard jcVideoPlayerStandard;
        private TextView mTvTitle;

        public HomeSingleContentTwoViewHolder(View contentViewTwo, MyItemClickListener mItemClickListener) {
            super(contentViewTwo);
            jcVideoPlayerStandard = (JCVideoPlayerStandard) contentViewTwo.findViewById(R.id.videoplayer);
            mTvTitle = (TextView) contentViewTwo.findViewById(R.id.tv_title);


        }
    }

    @Override
    public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {

        if (holder instanceof HomeSingleContentViewHolder) {
            onBindContentViewHolder((HomeSingleContentViewHolder) holder, fatherArraylist.get(position - 1));
        }

        switch (getItemViewType(position)) {
            case ITEM_TYPE_ADV:
                onBindContentAdvHolder((FreshNewsADVViewHolder) holder, fatherArraylist.get(position - 1));
                break;
            case ITEM_TYPE_BIG_ADV:
                onbindConteBigAdvHolder((FreshBigADVViewHolder) holder, fatherArraylist.get(position - 1));
                break;
            case ITEM_TYPE_EMPTY:
                HomeSingleContentTwoViewHolder holder1 = (HomeSingleContentTwoViewHolder) holder;

                holder1.jcVideoPlayerStandard.setUp(
                        videolink, JCVideoPlayer.SCREEN_LAYOUT_LIST,
                        title);
                holder1.mTvTitle.setText(resource);

                Picasso.with(holder1.jcVideoPlayerStandard.getContext())
                        .load(img)
                        .into(holder1.jcVideoPlayerStandard.thumbImageView);
                break;
        }
    }

    private void onbindConteBigAdvHolder(FreshBigADVViewHolder holder, DFTTNewsResult.DataBean dataBean) {
        holder.title.setText(dataBean.getTopic());
        Glide.with(UIUtils.getContext()).load(dataBean.getMiniimg().get(0).getSrc())
                .error(R.mipmap.default_img)
                .placeholder(R.mipmap.default_img)
                .into(holder.imageView);

        holder.des.setText(dataBean.getSource());
    }

    private void onBindContentAdvHolder(FreshNewsADVViewHolder holder, DFTTNewsResult.DataBean dataBean) {
        holder.title.setText(dataBean.getTopic());
        if (dataBean.getMiniimg().size() >= 1) {
            Glide.with(UIUtils.getContext()).load(dataBean.getMiniimg().get(0).getSrc())
                    .error(R.mipmap.default_img).placeholder(R.mipmap.default_img)
                    .into(holder.imageView1);
        }
        if (dataBean.getMiniimg().size() >= 2) {
            Glide.with(UIUtils.getContext()).load(dataBean.getMiniimg().get(1).getSrc())
                    .error(R.mipmap.default_img).placeholder(R.mipmap.default_img)
                    .into(holder.imageView2);
        }

        if (dataBean.getMiniimg().size() >= 3) {
            Glide.with(UIUtils.getContext()).load(dataBean.getMiniimg().get(2).getSrc())
                    .error(R.mipmap.default_img).placeholder(R.mipmap.default_img)
                    .into(holder.imageView3);
        }

        holder.des.setText(dataBean.getSource());
        holder.mTvAdv.setVisibility(View.VISIBLE);


    }

    private void onBindContentViewHolder(HomeSingleContentViewHolder holder, DFTTNewsResult.DataBean newsBean) {
        holder.title.setText(newsBean.getTopic());
        Glide.with(UIUtils.getContext()).load(newsBean.getMiniimg().get(0).getSrc())
                .error(R.mipmap.default_img)
                .placeholder(R.mipmap.default_img)
                .into(holder.imageView);

//        if (newsBean.getIsvideo().equals("1")) {
//            holder.video.setVisibility(View.VISIBLE);
//        } else {
        holder.video.setVisibility(View.GONE);
//        }
//        holder.des.setText(newsBean.getSource()+"   "+newsBean.getComment_count()+"   评论"+newsBean.getDate());
        holder.des.setText(newsBean.getSource());

//        holder.title.setText(newsBean.getTitle());
//        Glide.with(UIUtils.getContext()).load(newsBean.getImgUrl()).asBitmap().into(holder.imageView);
//        holder.des.setText(newsBean.getContentSource()+"   评论"+newsBean.getCommentNum()+"   "+newsBean.getCreateDate());


    }

    @Override
    public int getItemViewType(int position) {
        if (position == 0) {
            if ("0".equals(isVideo)) {
                return ITEM_TYPE_HEADER;
            } else {
                return ITEM_TYPE_EMPTY;
            }
        } else {
            if (fatherArraylist.get(position - 1).getIsadv().equals("1")) {
                if (fatherArraylist.get(position - 1).getBigpic().equals("1")) {
                    return ITEM_TYPE_BIG_ADV;
                }
                return ITEM_TYPE_ADV;
            }

            return ITEM_TYPE_CONTENT;
        }

    }


    @Override
    public int getItemCount() {
        return fatherArraylist.size() + 1;
    }

    private class HomeHeadViewHolder extends RecyclerView.ViewHolder {


        public HomeHeadViewHolder(WebView mDFTTWebView, MyHeadViewClickListener mHeadClickListener) {
            super(mDFTTWebView);
//            mDFTTWebView = (WebView) headView.findViewById(R.id.dftt_webview);
            mDFTTWebView.setWebViewClient(new WebViewClient() {

                @Override
                public boolean shouldOverrideUrlLoading(WebView view, String url) {
                    // TODO Auto-generated method stub
                    view.loadUrl(url);
                    return true;
                }

                @Override
                public void onPageStarted(WebView view, String url, Bitmap favicon) {
                    super.onPageStarted(view, url, favicon);
//                    showMyDialog();
                }

                @Override
                public void onPageFinished(WebView view, String url) {
                    super.onPageFinished(view, url);

//                    animDialog.dismiss();

                }
            });

            mDFTTWebView.loadUrl(url);

        }
    }


    /**
     * 1图的
     */
    private class HomeSingleContentViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener {

        private MyItemClickListener mItemClickListener;
        private TextView title;
        private TextView des;
        private ImageView imageView;
        private TextView zhiding;
        private ImageView video;

        public HomeSingleContentViewHolder(View contentView, MyItemClickListener mItemClickListener) {
            super(contentView);
            this.mItemClickListener = mItemClickListener;
            itemView.setOnClickListener(this);
            title = (TextView) itemView.findViewById(R.id.freshnews_content_tv_title);
            imageView = (ImageView) itemView.findViewById(R.id.freshnews_content_one_iv_des);
            des = (TextView) itemView.findViewById(R.id.des);
            zhiding = (TextView) itemView.findViewById(R.id.zhiding);
            video = (ImageView) itemView.findViewById(R.id.iv_video);


        }

        @Override
        public void onClick(View v) {
            if (mItemClickListener != null) {
                mItemClickListener.onItemClick(v, getPosition() - 1);
            }
        }
    }

    private class FreshBigADVViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener {

        private MyItemClickListener mItemClickListener;
        private TextView title;
        private TextView des;
        private ImageView imageView;
        private TextView zhiding;
        private final ImageView video;

        public FreshBigADVViewHolder(View avdTwo3, MyItemClickListener mItemClickListener) {
            super(avdTwo3);
            this.mItemClickListener = mItemClickListener;
            itemView.setOnClickListener(this);
            title = (TextView) itemView.findViewById(R.id.freshnews_content_tv_title);
            imageView = (ImageView) itemView.findViewById(R.id.freshnews_content_one_iv_des);
            video = (ImageView) itemView.findViewById(R.id.iv_video);
            des = (TextView) itemView.findViewById(R.id.des);
            zhiding = (TextView) itemView.findViewById(R.id.zhiding);
            TextView mTvDAD = (TextView) itemView.findViewById(R.id.adv_dddd);
            mTvDAD.setVisibility(View.VISIBLE);

        }

        @Override
        public void onClick(View v) {
            if (mItemClickListener != null) {
                mItemClickListener.onItemClick(v, getPosition() - 1);
            }
        }
    }

    private class FreshNewsADVViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener {

        private MyItemClickListener mItemClickListener;
        private TextView title;
        private TextView des;
        private ImageView imageView;
        private TextView zhiding;
        private ImageView imageView1;
        private ImageView imageView2;
        private ImageView imageView3;
        private TextView mTvAdv;

        public FreshNewsADVViewHolder(View avdTwo, MyItemClickListener mItemClickListener) {
            super(avdTwo);
            this.mItemClickListener = mItemClickListener;
            itemView.setOnClickListener(this);
            title = (TextView) itemView.findViewById(R.id.freshnews_content_tv_title);
            imageView1 = (ImageView) itemView.findViewById(R.id.freshnews_content_iv1);
            imageView2 = (ImageView) itemView.findViewById(R.id.freshnews_content_iv2);
            imageView3 = (ImageView) itemView.findViewById(R.id.freshnews_content_iv3);
            mTvAdv = (TextView) itemView.findViewById(R.id.adv_dddd);
            mTvAdv.setVisibility(View.VISIBLE);
            des = (TextView) itemView.findViewById(R.id.des);
        }

        @Override
        public void onClick(View v) {
            if (mItemClickListener != null) {
                mItemClickListener.onItemClick(v, getPosition() - 1);
            }
        }
    }
}
