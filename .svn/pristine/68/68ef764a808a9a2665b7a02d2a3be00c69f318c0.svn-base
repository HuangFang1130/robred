package com.jiahehongye.robred.activity;

import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentPagerAdapter;
import android.support.v4.view.ViewPager;
import android.util.DisplayMetrics;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.jiahehongye.robred.BaseActivity;
import com.jiahehongye.robred.R;
import com.jiahehongye.robred.fragment.BuyDiamondFragment;
import com.jiahehongye.robred.fragment.FreeFlowerFragment;

import java.util.ArrayList;

public class DiamondAccountActivity extends BaseActivity {

    private View label;
    private int mScreenWidth;
    private LinearLayout.LayoutParams params;
    private int mLabelWidth;
    private ArrayList<Fragment> allFragment =new ArrayList<>();
    private ViewPager diamond_viewpager;
    private TextView buy_diamond_text,free_flower_text;
    private LinearLayout buy_diamond,free_flower;
    private RelativeLayout zuanshi_back;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        applyKitKatTranslucency();
        mTintManager.setStatusBarTintResource(R.color.home_state_color);
        setContentView(R.layout.activity_diamond_account);
        init();

        //获取屏幕宽度
        DisplayMetrics metrics = new DisplayMetrics();
        getWindowManager().getDefaultDisplay().getMetrics(metrics);
        mScreenWidth = metrics.widthPixels;

        params = (LinearLayout.LayoutParams)label.getLayoutParams();
        mLabelWidth = params.width = mScreenWidth/2;

        BuyDiamondFragment buyDiamondFragment = new BuyDiamondFragment();
        FreeFlowerFragment freeFlowerFragment = new FreeFlowerFragment();
        allFragment.add(buyDiamondFragment);
        allFragment.add(freeFlowerFragment);

        FragmentAdapter adapter = new FragmentAdapter(getSupportFragmentManager(), allFragment);
        diamond_viewpager.setCurrentItem(0);
        diamond_viewpager.setOnPageChangeListener(new ViewPager.OnPageChangeListener() {
            @Override
            public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {
                params.setMargins((int) ((mScreenWidth / 2- mLabelWidth) / 2
                        + mScreenWidth / 2 * (position + positionOffset)), 0, 0, 0);
                label.setLayoutParams(params);
            }

            @Override
            public void onPageSelected(int position) {
                switch (position){
                    case 0:
                        buy_diamond_text.setTextColor(getResources().getColor(R.color.home_state_color));
                        free_flower_text.setTextColor(getResources().getColor(R.color.black));
                        break;
                    case 1:
                        buy_diamond_text.setTextColor(getResources().getColor(R.color.black));
                        free_flower_text.setTextColor(getResources().getColor(R.color.home_state_color));
                        break;
                }

            }

            @Override
            public void onPageScrollStateChanged(int state) {

            }
        });

        params.setMargins((mScreenWidth / 2 - mLabelWidth) / 2, 0, 0, 0);
        label.setLayoutParams(params);
        diamond_viewpager.setAdapter(adapter);
    }

    private void init() {
        zuanshi_back = (RelativeLayout) findViewById(R.id.zuanshi_back);
        free_flower = (LinearLayout) findViewById(R.id.free_flower);
        buy_diamond = (LinearLayout) findViewById(R.id.buy_diamond);
        label = findViewById(R.id.diamond_label);
        diamond_viewpager = (ViewPager) findViewById(R.id.diamond_viewpager);
        buy_diamond_text = (TextView) findViewById(R.id.buy_diamond_text);
        free_flower_text = (TextView) findViewById(R.id.free_flower_text);

        zuanshi_back.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                finish();
            }
        });

        buy_diamond.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                buy_diamond_text.setTextColor(getResources().getColor(R.color.home_state_color));
                free_flower_text.setTextColor(getResources().getColor(R.color.black));
                diamond_viewpager.setCurrentItem(0);
            }
        });

        free_flower.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                buy_diamond_text.setTextColor(getResources().getColor(R.color.black));
                free_flower_text.setTextColor(getResources().getColor(R.color.home_state_color));
                diamond_viewpager.setCurrentItem(1);
            }
        });
    }

    /**
     * 可滑动Fragment
     */
    class FragmentAdapter extends FragmentPagerAdapter {
        private ArrayList<Fragment> fragments;
        private FragmentManager fm;

        public FragmentAdapter(FragmentManager fm, ArrayList<Fragment> fragments) {
            super(fm);
            this.fm = fm;
            this.fragments = fragments;
        }

        @Override
        public int getItemPosition(Object object) {
            return POSITION_NONE;
        }

        @Override
        public Fragment getItem(int arg0) {
            return fragments.get(arg0);
        }

        @Override
        public int getCount() {
            return fragments == null ? 0 : fragments.size();
        }

        /**
         * 防止数据重复加载
         */
        @Override
        public void destroyItem(ViewGroup container, int position, Object object) {

        }

    }
}
