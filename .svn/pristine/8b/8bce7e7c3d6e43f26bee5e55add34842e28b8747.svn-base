package com.quanmofang.ntg.adapter;

import android.content.Intent;
import android.graphics.Color;
import android.os.Bundle;
import android.support.v7.widget.RecyclerView;
import android.text.TextUtils;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

import com.bumptech.glide.Glide;
import com.quanmofang.ntg.BaseActivity;
import com.quanmofang.ntg.BaseRecycleViewAdapter;
import com.quanmofang.ntg.Constant;
import com.quanmofang.ntg.R;
import com.quanmofang.ntg.activity.PhotoviewActivity;
import com.quanmofang.ntg.bean.MyAttentionResult;
import com.quanmofang.ntg.listener.MyItemClickListener;
import com.quanmofang.ntg.mvp.presenter.ZanPresenter;
import com.quanmofang.ntg.mvp.view.ZanView;
import com.quanmofang.ntg.utils.SPUtils;
import com.quanmofang.ntg.utils.UIUtils;
import com.quanmofang.ntg.view.CircleImageView;
import com.zhy.autolayout.utils.AutoUtils;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

/**
 * Created by huangjunhui on 2017/2/17.9:42
 */
public class RelationRecycleViewAdpatre extends BaseRecycleViewAdapter implements ZanView {

    private BaseActivity mActivity;
    private ArrayList<MyAttentionResult.BodyBean> fatherArrayList;
    private View footView;
    private final String id;
    private final ZanPresenter zanPresenter;

    public RelationRecycleViewAdpatre(BaseActivity mActivity, ArrayList<MyAttentionResult.BodyBean> fatherArrayList) {
        this.mActivity = mActivity;
        this.fatherArrayList = fatherArrayList;
        id = (String) SPUtils.get(UIUtils.getContext(), Constant.LOGIN_USER_ID, "");
        zanPresenter = new ZanPresenter(this);

    }

    @Override
    public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {

        switch (viewType) {
            case ITEM_TYPE_CONTENT:
                View contentView = LayoutInflater.from(mActivity).inflate(R.layout.fragment_relation_content, null);
                return new RelationContentRecycleViewHolder(contentView, mItemClickListener);
            case ITEM_TYPE_FOOT:
                footView = LayoutInflater.from(mActivity).inflate(R.layout.application_footview, null);
                hintFootView();
                return new RelationFootRecycleViewHolder(footView);
        }

        return null;
    }

    public void showFootView() {
        if (footView != null) {
            footView.setVisibility(View.VISIBLE);
        }
    }

    public void hintFootView() {
        if (footView != null) {
            footView.setVisibility(View.GONE);
        }
    }

    @Override
    public void onBindViewHolder(RecyclerView.ViewHolder holder, final int position) {
        if (holder instanceof RelationContentRecycleViewHolder) {
            final RelationContentRecycleViewHolder contentHolder = (RelationContentRecycleViewHolder) holder;
            contentHolder.mTvName.setText(fatherArrayList.get(position).getNickname());
            Glide.with(UIUtils.getContext()).load(fatherArrayList.get(position).getTx()).placeholder(R.mipmap.avatar_default)
                    .error(R.mipmap.avatar_default)
                    .animate(android.R.anim.slide_in_left).into(contentHolder.mIvAvatar);
            contentHolder.mIvAvatar.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                     Intent intent = new Intent(mActivity,PhotoviewActivity.class);
                     Bundle bundle = new Bundle();
                     List<String> thumb = new ArrayList<>();
                     thumb.add(fatherArrayList.get(position).getTx());
                     bundle.putSerializable("infoList", (Serializable)thumb );
                     //intent.putExtra(PHOTO_POSITION,3);
                     intent.putExtras(bundle);
                     mActivity.startActivity(intent);
                }
            });

            String wenzhang;
            String fensi;
            if (TextUtils.isEmpty(fatherArrayList.get(position).getWenzhang())) {
                wenzhang = "0";
            } else {
                wenzhang = fatherArrayList.get(position).getWenzhang();
            }

            if (TextUtils.isEmpty(fatherArrayList.get(position).getFans())) {
                fensi = "0";
            } else {
                fensi = fatherArrayList.get(position).getFans();
            }

            contentHolder.mTvContent.setText(wenzhang+"篇文章     "+fensi+"人粉丝");


            contentHolder.mTvAttenion.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    String string = contentHolder.mTvAttenion.getText().toString();
                    if (string.equals("关注")) {
                        contentHolder.mTvAttenion.setText("已关注");
                        contentHolder.mTvAttenion.setTextColor(Color.parseColor("#B2AFAA"));
                        contentHolder.mTvAttenion.setBackgroundResource(R.drawable.task_head_support_gray);
                        zanPresenter.requestAttention(fatherArrayList.get(position).getUserid(),id);
                    } else {
                        contentHolder.mTvAttenion.setText("关注");
                        contentHolder.mTvAttenion.setTextColor(Color.parseColor("#F74A98"));
                        contentHolder.mTvAttenion.setBackgroundResource(R.drawable.task_head_support);
                        zanPresenter.requestCancleAttention(fatherArrayList.get(position).getUserid(),id);
                    }
                }
            });
        }
    }

    @Override
    public int getItemViewType(int position) {
        if (fatherArrayList.size() < 1) {
            return ITEM_TYPE_FOOT;
        }
        if (position == getItemCount() - 1) {
            return ITEM_TYPE_FOOT;
        }
        return ITEM_TYPE_CONTENT;
    }

    @Override
    public int getItemCount() {
        return fatherArrayList.size() + 1;
    }

    @Override
    public void showProcress() {

    }

    @Override
    public void parserDate(Object data) {

    }

    @Override
    public void hintProcress() {

    }

    @Override
    public void errorHandling(Throwable e) {

    }

    private class RelationContentRecycleViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener {
        private MyItemClickListener mItemClickListener;
        private TextView mTvAttenion;
        private TextView mTvContent;
        private TextView mTvName;
        private CircleImageView mIvAvatar;

        public RelationContentRecycleViewHolder(View contentView, MyItemClickListener mItemClickListener) {
            super(contentView);
            AutoUtils.autoSize(contentView);
            this.mItemClickListener = mItemClickListener;
            contentView.setOnClickListener(this);
            mTvAttenion = (TextView) contentView.findViewById(R.id.relation_attenion);
            mTvContent = (TextView) contentView.findViewById(R.id.relation_content);
            mTvName = (TextView) contentView.findViewById(R.id.relation_name);
            mIvAvatar = (CircleImageView) contentView.findViewById(R.id.relation_avatar);

        }

        @Override
        public void onClick(View v) {
            if (mItemClickListener != null) {
                mItemClickListener.onItemClick(v, getPosition());
            }
        }
    }

    private class RelationFootRecycleViewHolder extends RecyclerView.ViewHolder {
        public RelationFootRecycleViewHolder(View footView) {
            super(footView);
            AutoUtils.autoSize(footView);

        }
    }
}
