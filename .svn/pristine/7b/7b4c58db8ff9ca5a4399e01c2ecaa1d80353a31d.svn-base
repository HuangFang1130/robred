package com.jiahehongye.robred.activity;

import android.content.DialogInterface;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.util.Log;
import android.view.View;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import android.widget.Toast;

import com.bumptech.glide.Glide;
import com.jiahehongye.robred.BaseActivity;
import com.jiahehongye.robred.Constant;
import com.jiahehongye.robred.R;
import com.jiahehongye.robred.cook.CookieJarImpl;
import com.jiahehongye.robred.cook.PersistentCookieStore;
import com.jiahehongye.robred.utils.UIUtils;
import com.jiahehongye.robred.view.GlideCircleTransform;
import com.jiahehongye.robred.view.MyProgressDialog;

import org.json.JSONException;
import org.json.JSONObject;

import java.io.IOException;

import okhttp3.Call;
import okhttp3.Callback;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.RequestBody;
import okhttp3.Response;

public class PersonalActivity extends BaseActivity implements View.OnClickListener {

    private static final int GET_ALL = 0000;
    private String nickname;
    private Handler handler = new Handler() {
        @Override
        public void handleMessage(Message msg) {
            switch (msg.what) {
                case GET_ALL:
                    animDialog.dismiss();
                    String s = (String) msg.obj;
                    try {
                        JSONObject object = new JSONObject(s);
                        if (object.getString("result").equals("success")) {
                            JSONObject data = new JSONObject(object.getString("data"));
                            Glide.with(PersonalActivity.this).load(data.getString("userPhoto")).transform(new GlideCircleTransform(UIUtils.getContext())).into(mHead);
                            mPhoneNumber.setText(data.getString("mobile"));

                            nickname = data.getString("nickName");
                            et_name.setText(data.getString("nickName"));
                            xingzuo.setText(data.getString("constellation"));

                            if (data.getString("gender").equals("0")){
                                mSex.setText("保密");
                            }else if (data.getString("gender").equals("1")){
                                mSex.setText("男");
                            }
                            else if (data.getString("gender").equals("2")){
                                mSex.setText("女");
                            }

                            qinggan.setText(data.getString("maritalStatus"));
                            et_job.setText(data.getString("profession"));
                            xueli.setText(data.getString("schoolRecord"));
                            mudi.setText(data.getString("datingPurpose"));
                            et_sign.setText(data.getString("personalDescription"));
                            et_hobby.setText(data.getString("hobbies"));


                        }
                    } catch (JSONException e) {
                        e.printStackTrace();
                    }

                    break;
            }
        }
    };

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        applyKitKatTranslucency();
        mTintManager.setStatusBarTintResource(R.color.white);
        setContentView(R.layout.activity_personal);

        initView();
    }

    private RelativeLayout mBack;
    private RelativeLayout mCommit;
    private ImageView mHead;
    private TextView mPhoneNumber,mSex;
    private TextView et_name,et_age,et_sign,et_job,et_school,et_more,et_hobby,qinggan,mudi,xueli,xingzuo;
    private void initView() {
        mBack = (RelativeLayout) findViewById(R.id.personal_rl_back);
        mCommit = (RelativeLayout) findViewById(R.id.personal_rl_commit);
        mHead = (ImageView) findViewById(R.id.personal_iv_head);
        mPhoneNumber = (TextView) findViewById(R.id.personal_tv_phone_number);
        mSex = (TextView) findViewById(R.id.personal_tv_sex);
        et_name = (TextView) findViewById(R.id.personal_et_name);
        et_sign = (TextView) findViewById(R.id.personal_et_perosonal_sign);
        et_job = (TextView) findViewById(R.id.personal_et_job);
        et_hobby = (TextView) findViewById(R.id.personal_et_hobby);
        qinggan = (TextView) findViewById(R.id.personal_et_perosonal_qinggan);
        mudi = (TextView) findViewById(R.id.personal_et_mudi);
        xueli = (TextView) findViewById(R.id.personal_et_xueli);
        xingzuo = (TextView) findViewById(R.id.personal_tv_xingzuo);

        mBack.setOnClickListener(this);
        mCommit.setOnClickListener(this);
        mHead.setOnClickListener(this);
        mSex.setOnClickListener(this);
        et_name.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent = new Intent(getApplicationContext(),ChangeNickName.class);
                intent.putExtra("nickname",nickname);
                startActivity(intent);
            }
        });
    }

    @Override
    public void onClick(View view) {
        switch (view.getId()){
            case R.id.personal_rl_back:
                finish();
                break;
            case R.id.personal_rl_commit:
                break;
            case R.id.personal_iv_head:
                break;
            case R.id.personal_tv_sex:
                break;
        }
    }

    /**
     *
     */
    private PersistentCookieStore persistentCookieStore;
    private MyProgressDialog animDialog;
    private Call call;

    private void getdata() {

        showMyDialog();

        OkHttpClient.Builder builder = new OkHttpClient.Builder();
        persistentCookieStore = new PersistentCookieStore(PersonalActivity.this);
        CookieJarImpl cookieJarImpl = new CookieJarImpl(persistentCookieStore);
        builder.cookieJar(cookieJarImpl);
        OkHttpClient client = builder.build();

        JSONObject jsonObject = new JSONObject();

        RequestBody body = RequestBody.create(Constant.JSON, jsonObject.toString());
        Request request = new Request.Builder()
                .url(Constant.MEMBERINFO)
                .post(body)
                .build();


        call = client.newCall(request);
        call.enqueue(new Callback() {
            @Override
            public void onFailure(Call call, IOException e) {
                PersonalActivity.this.runOnUiThread(new Runnable() {
                    @Override
                    public void run() {
                        Toast.makeText(PersonalActivity.this, "网络连接失败", Toast.LENGTH_SHORT).show();
                        animDialog.dismiss();
                    }
                });
            }

            @Override
            public void onResponse(Call call, Response response) throws IOException {
                String result = response.body().string();
                Log.e("获取个人全部信息返回：", result);

                Message msg = handler.obtainMessage();
                msg.what = GET_ALL;
                msg.obj = result;
                handler.sendMessage(msg);
            }
        });

    }

    /**
     * 显示对话框
     */
    public void showMyDialog() {
        animDialog = new MyProgressDialog(this, "玩命加载中...", R.drawable.loading);
        animDialog.show();
        animDialog.setCancelable(true);
        animDialog.setOnDismissListener(new DialogInterface.OnDismissListener() {
            @Override
            public void onDismiss(DialogInterface dialogInterface) {
                if (call.isExecuted()) {
                    call.cancel();
                }
            }
        });
    }

    @Override
    public void onResume() {
        super.onResume();
        getdata();
    }
}
