package com.jiahehongye.robred.fragment;

import android.content.Intent;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.widget.SwipeRefreshLayout;
import android.support.v7.widget.DefaultItemAnimator;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ListView;
import android.widget.Toast;

import com.baidu.location.LocationClient;
import com.baidu.location.LocationClientOption;
import com.hyphenate.easeui.EaseConstant;
import com.jiahehongye.robred.BaseFragment;
import com.jiahehongye.robred.Constant;
import com.jiahehongye.robred.MyLocationListener;
import com.jiahehongye.robred.R;
import com.jiahehongye.robred.activity.ChatActivity;
import com.jiahehongye.robred.activity.InteractionActivity;
import com.jiahehongye.robred.activity.NotifyActivity;
import com.jiahehongye.robred.adapter.MessageRecycleAdapter;
import com.jiahehongye.robred.interfaces.MyHeadViewClickListener;
import com.jiahehongye.robred.interfaces.MyItemClickListener;
import com.jiahehongye.robred.utils.SPUtils;
import com.jiahehongye.robred.utils.UIUtils;
import com.jiahehongye.robred.view.DividerItemDecoration;

import java.util.ArrayList;

/**
 * Created by Administrator on 2016/11/30.
 * <p/>
 * 消息列表
 */
public class MessageFragment extends BaseFragment {

    private ListView mMessageListView;
    private SwipeRefreshLayout mMessageSwiperefresh;
    private RecyclerView mMessageRecycle;
    private LinearLayoutManager linearLayoutManager;
    private MessageRecycleAdapter messageRecycleAdapter;
    private ArrayList<String> fatherArrayList;
    private ArrayList<String> arrayList;
    private LocationClient mLocationClient;

    @Nullable
    @Override
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        mMainUi.applyKitKatTranslucency();
        mMainUi.mTintManager.setStatusBarTintResource(R.color.home_white_color);
        View view = LayoutInflater.from(getActivity()).inflate(R.layout.fragment_message, null);
        mMessageSwiperefresh = (SwipeRefreshLayout) view.findViewById(R.id.message_swiperefreshlayout);
        mMessageRecycle = (RecyclerView) view.findViewById(R.id.message_recycleview);

//        SDKInitializer.initialize(UIUtils.getContext());
//        MapView mMapView= (MapView) view.findViewById(R.id.mapview);
        //创建定位客户端
        mLocationClient = new LocationClient(UIUtils.getContext());
//        设置定位监听，监听定位数据
        mLocationClient.registerLocationListener(new MyLocationListener());
        //配置定位相关参数
        LocationClientOption option = new LocationClientOption();
        option.setLocationMode(LocationClientOption.LocationMode.Hight_Accuracy);// 设置定位模式
        option.setCoorType("bd09ll");// 返回的定位结果是百度经纬度,默认值gcj02
        option.setScanSpan(5000);// 设置发起定位请求的间隔时间为5000ms
//        option.setIsNeedAddress(true);// 返回的定位结果包含地址信息
//        option.setNeedDeviceDirect(true);// 返回的定位结果包含手机机头的方向
        mLocationClient.setLocOption(option);


//        baiduMap.setMyLocationEnabled(true);// 打开定位图层
        mLocationClient.start();// 开始定位


        return view;
    }

    @Override
    public void onActivityCreated(@Nullable Bundle savedInstanceState) {
        super.onActivityCreated(savedInstanceState);
        fatherArrayList = new ArrayList<>();
        arrayList = new ArrayList<>();
        for (int i = 0; i < 30; i++) {
            arrayList.add("我是第" + i + "个条目");
        }

        fatherArrayList.addAll(arrayList);

        mMessageSwiperefresh.setColorSchemeResources(R.color.holo_blue_bright, R.color.holo_green_light,
                R.color.holo_orange_light, R.color.holo_red_light);
        mMessageSwiperefresh.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {
            @Override
            public void onRefresh() {
                mMessageSwiperefresh.setRefreshing(false);
            }
        });

        linearLayoutManager = new LinearLayoutManager(getActivity());
        mMessageRecycle.setLayoutManager(linearLayoutManager);
        mMessageRecycle.setItemAnimator(new DefaultItemAnimator());
        mMessageRecycle.addItemDecoration(new DividerItemDecoration(
                getActivity(), DividerItemDecoration.HORIZONTAL_LIST));
        messageRecycleAdapter = new MessageRecycleAdapter(mMainUi, fatherArrayList);
        mMessageRecycle.setAdapter(messageRecycleAdapter);


        messageRecycleAdapter.setOnItemClickListener(new MyItemClickListener() {
            @Override
            public void onItemClick(View view, int postion) {
                Intent intent = new Intent(mMainUi, ChatActivity.class);
                intent.putExtra(EaseConstant.EXTRA_CHAT_TYPE,EaseConstant.CHATTYPE_SINGLE);
                String mobile= (String) SPUtils.get(UIUtils.getContext(), Constant.LOGIN_MOBILE, "");
                if(mobile==""){
                    Toast.makeText(UIUtils.getContext(),"请先登录！",Toast.LENGTH_SHORT).show();
                }
                intent.putExtra(EaseConstant.EXTRA_USER_ID,"15933434904");
                intent.putExtra("name","李建涛");
                mMainUi.startActivity(intent);

            }
        });

        //滑动的监听
        mMessageRecycle.addOnScrollListener(new RecyclerView.OnScrollListener() {
            @Override
            public void onScrollStateChanged(RecyclerView recyclerView, int newState) {
                super.onScrollStateChanged(recyclerView, newState);
                if (newState == RecyclerView.SCROLL_STATE_IDLE) {
                    int lastVisiblePosition = linearLayoutManager.findLastVisibleItemPosition();
                    if (lastVisiblePosition >= linearLayoutManager.getItemCount() - 1) {
                        fatherArrayList.addAll(arrayList);
                        messageRecycleAdapter.notifyDataSetChanged();
                    }

                }
            }
        });

        messageRecycleAdapter.setOnHeadClickListener(new MyHeadViewClickListener() {
            @Override
            public void onHeadClick(View view) {
                switch (view.getId()) {
                    case R.id.message_interaction://互动消息
                        Intent interactionIntent = new Intent(mMainUi, InteractionActivity.class);
                        startActivity(interactionIntent);
                        break;
                    case R.id.message_system://系统消息
                        Toast.makeText(getActivity(), "系统消息", Toast.LENGTH_SHORT).show();

                        break;
                    case R.id.message_notification://通知消息
                        Intent notifyIntent = new Intent(mMainUi, NotifyActivity.class);
                        startActivity(notifyIntent);
                        break;


                }
            }
        });


    }

    @Override
    public void onHiddenChanged(boolean hidden) {
        super.onHiddenChanged(hidden);
        if(!hidden){
            mMainUi.applyKitKatTranslucency();
            mMainUi.mTintManager.setStatusBarTintResource(R.color.home_white_color);
        }
    }

}
