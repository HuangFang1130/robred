package com.jiahehongye.robred.activity;

import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.support.annotation.Nullable;
import android.text.TextUtils;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.webkit.WebView;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import android.widget.Toast;

import com.alibaba.fastjson.JSON;
import com.jiahehongye.robred.BaseActivity;
import com.jiahehongye.robred.Constant;
import com.jiahehongye.robred.R;
import com.jiahehongye.robred.adapter.NewsCommentRecycleAdapter;
import com.jiahehongye.robred.bean.CommentBean;
import com.jiahehongye.robred.cook.CookieJarImpl;
import com.jiahehongye.robred.cook.PersistentCookieStore;
import com.jiahehongye.robred.view.FullyLinearLayoutManager;
import com.jiahehongye.robred.view.MyProgressDialog;

import org.json.JSONException;
import org.json.JSONObject;

import java.io.IOException;
import java.util.ArrayList;

import okhttp3.Call;
import okhttp3.Callback;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.RequestBody;
import okhttp3.Response;

/**
 * Created by huangjunhui on 2016/12/6.15:19
 *
 * 新闻详情页
 */
public class FreshNewsDetailActivity extends BaseActivity implements View.OnClickListener {

    private ListView mCommentRecycleView;
    private FullyLinearLayoutManager linearLayoutManager;
    private ArrayList<CommentBean> fatherArrayList;
    private ArrayList<CommentBean> arrayList = new ArrayList<>();
    private NewsCommentRecycleAdapter newsCommentRecycleAdapter;
    private WebView freshnews_detail_webview;
    private String id;
    private TextView comment_all_number;
    private PersistentCookieStore persistentCookieStore;
    private MyProgressDialog animDialog;
    private Call call;

    private static final int GET_ALL = 0000;
    private static final int UP_BACK = 0001;
    private Handler handler = new Handler() {
        @Override
        public void handleMessage(Message msg) {
            switch (msg.what) {
                case GET_ALL:
                    String s = (String) msg.obj;
                    try {
                        JSONObject object = new JSONObject(s);
                        if (object.getString("result").equals("success")) {
                            JSONObject data = new JSONObject(object.getString("data"));
                            String commentNum = data.getString("commentNum");
                            comment_all_number.setText(commentNum);
                            String content = data.getString("content");
                            freshnews_detail_webview.loadDataWithBaseURL("about:blank",content,"text/html","utf-8",null);
                            String commentL = data.getString("commentL");
                            arrayList = (ArrayList<CommentBean>) JSON.parseArray(commentL,CommentBean.class);
                            newsCommentRecycleAdapter = new NewsCommentRecycleAdapter(FreshNewsDetailActivity.this,arrayList, LayoutInflater.from(act));

                            mCommentRecycleView.setAdapter(newsCommentRecycleAdapter);
                        }
                    } catch (JSONException e) {
                        e.printStackTrace();
                    }

                    break;
                case UP_BACK:
                    String a = (String) msg.obj;
                    try {
                        JSONObject object = new JSONObject(a);
                        if (object.getString("result").equals("success")) {
                            String data = object.getString("data");
                            if (data.equals("评论成功")){
                                pinglun_first_edit.setText("");
                                hideSoftKeyboard();
                                Toast.makeText(FreshNewsDetailActivity.this, "评论成功", Toast.LENGTH_SHORT).show();
                            }
                        }
                    } catch (JSONException e) {
                        e.printStackTrace();
                    }
                    break;
            }
        }
    };
    private TextView pinglun_first;
    private EditText pinglun_first_edit;

    @Override
    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        applyKitKatTranslucency();
        mTintManager.setStatusBarTintResource(R.color.home_white_color);
        setContentView(R.layout.activity_fresh_news_detail);
        Bundle bundle = getIntent().getExtras();
        if (bundle!=null){
            id = bundle.getString("id");
//            Toast.makeText(FreshNewsDetailActivity.this, id, Toast.LENGTH_SHORT).show();
        }
        pinglun_first = (TextView) findViewById(R.id.pinglun_first);
        pinglun_first_edit = (EditText) findViewById(R.id.pinglun_first_edit);
        mCommentRecycleView = (ListView) findViewById(R.id.lv_deital);
        comment_all_number = (TextView) findViewById(R.id.comment_all_number);
        freshnews_detail_webview =new WebView(act);
        RelativeLayout mRlComment= (RelativeLayout) findViewById(R.id.comment_rl_dd);
        getdata();
        mRlComment.setOnClickListener(this);
        mCommentRecycleView.addHeaderView( freshnews_detail_webview);

        pinglun_first.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                UpData();
            }
        });
    }
    /**
     *提交一级评论
     */
    private void UpData() {
        if (TextUtils.isEmpty(pinglun_first_edit.getText())){
            Toast.makeText(FreshNewsDetailActivity.this, "请输入评论内容", Toast.LENGTH_SHORT).show();
            return;
        }
        OkHttpClient.Builder builder = new OkHttpClient.Builder();
        persistentCookieStore = new PersistentCookieStore(FreshNewsDetailActivity.this);
        CookieJarImpl cookieJarImpl = new CookieJarImpl(persistentCookieStore);
        builder.cookieJar(cookieJarImpl);
        OkHttpClient client = builder.build();

        JSONObject jsonObject = new JSONObject();
        try {
            jsonObject.put("informationId",id);
            jsonObject.put("content",pinglun_first_edit.getText().toString());
            jsonObject.put("commentLevel","1");
        } catch (JSONException e) {
            e.printStackTrace();
        }

        RequestBody body = RequestBody.create(Constant.JSON, jsonObject.toString());
        Request request = new Request.Builder()
                .url(Constant.UP_COMMENT)
                .post(body)
                .build();


        call = client.newCall(request);
        call.enqueue(new Callback() {
            @Override
            public void onFailure(Call call, IOException e) {
                FreshNewsDetailActivity.this.runOnUiThread(new Runnable() {
                    @Override
                    public void run() {
                        Toast.makeText(FreshNewsDetailActivity.this, "网络连接失败", Toast.LENGTH_SHORT).show();
                    }
                });
            }

            @Override
            public void onResponse(Call call, Response response) throws IOException {
                String result = response.body().string();

                Message msg = handler.obtainMessage();
                msg.what = UP_BACK;
                msg.obj = result;
                handler.sendMessage(msg);
            }
        });
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()){
            case R.id.comment_rl_dd:
                Intent intent = new Intent(this,CommentAllActivity.class);
                intent.putExtra("informationId",id);
                startActivity(intent);
                break;
        }
    }


    /**
     *获取新闻详情
     */

    private void getdata() {


        OkHttpClient.Builder builder = new OkHttpClient.Builder();
        persistentCookieStore = new PersistentCookieStore(getApplicationContext());
        CookieJarImpl cookieJarImpl = new CookieJarImpl(persistentCookieStore);
        builder.cookieJar(cookieJarImpl);
        OkHttpClient client = builder.build();

        JSONObject jsonObject = new JSONObject();
        try {
            jsonObject.put("id",id);
        } catch (JSONException e) {
            e.printStackTrace();
        }

        RequestBody body = RequestBody.create(Constant.JSON, jsonObject.toString());
        Request request = new Request.Builder()
                .url(Constant.NEWS_DETAIL)
                .post(body)
                .build();


        call = client.newCall(request);
        call.enqueue(new Callback() {
            @Override
            public void onFailure(Call call, IOException e) {
                FreshNewsDetailActivity.this.runOnUiThread(new Runnable() {
                    @Override
                    public void run() {
                        Toast.makeText(FreshNewsDetailActivity.this, "网络连接失败", Toast.LENGTH_SHORT).show();
                    }
                });
            }

            @Override
            public void onResponse(Call call, Response response) throws IOException {
                String result = response.body().string();
                Log.e("登陆返回：", result);

                Message msg = handler.obtainMessage();
                msg.what = GET_ALL;
                msg.obj = result;
                handler.sendMessage(msg);
            }
        });

    }
}
